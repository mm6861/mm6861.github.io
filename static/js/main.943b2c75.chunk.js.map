{"version":3,"sources":["test_data_files/login.js","components/Login.js","components/MainNav.js","components/Main.js","components/Participation.js","components/Plan.js","components/Excution.js","components/MyInfo.js","components/RegisterManager.js","components/ResultManager.js","App.js","reportWebVitals.js","index.js"],"names":["users","id","pwd","name","Login","props","useState","setId","setPwd","open","setOpen","Container","className","Row","Col","lg","md","sm","Card","Header","as","Body","Form","Check","type","label","Control","placeholder","onChange","e","target","value","Fade","in","style","color","Button","variant","width","onClick","user","console","log","Data","changeLoginInfo","userCheck","MainNav","marginTop","backgroundColor","manager","Nav","fixed","fill","defaultActiveKey","onSelect","changeTab","Item","Link","eventKey","class","aria-hidden","fontSize","Main","goalName","lists","date","content","score","image","commentList","commentState","commentStateChange","imageState","setImageState","imageListState","setImageListState","imageIndexState","setImageIndexState","imageGoalNameState","setImageGoalNameState","imageDateState","setImageDateState","imageNameState","setImageNameState","showState","setShowState","setImageModalVeiw","n","length","body","border","margin","paddingLeft","size","map","list","i","Title","Text","Img","src","Badge","cursor","imageList","galName","newArray","setCommentState","comment","borderRadius","padding","marginBottom","InputGroup","FormControl","aria-label","aria-describedby","Append","zIndex","Modal","show","onHide","closeButton","paddingBottom","Participation","Accordion","defaultValue","Toggle","marginLeft","Collapse","startDate","endDate","description","plan","subgoal","subgoalContent","necessary","participants","rating","paddingBotton","paddingTop","indexOf","Group","controlId","Label","readonly","Plan","Excution","MyInfo","RegisterManager","ResultManager","App","tab","loginInfo","height","Navbar","bg","Brand","href","OverlayTrigger","placement","overlay","Tooltip","position","top","right","left","maxWidth","jIndex","bodyComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.943b2c75.chunk.js","sourcesContent":["export default {\r\n  users : [\r\n  {\r\n    id : \"kim\",\r\n    pwd : \"1111\",\r\n    name : \"김은미\"\r\n  },\r\n  {\r\n    id : \"ko\",\r\n    pwd : \"2222\",\r\n    name : \"고병련\"\r\n  },\r\n  {\r\n    id : \"kong\",\r\n    pwd : \"3333\",\r\n    name : \"공경환\"\r\n  },\r\n  {\r\n    id : \"manager\",\r\n    pwd : \"0000\",\r\n    name : \"관리자\"\r\n  }\r\n]\r\n};","import React, {useState} from 'react';\r\nimport { Row, Col, Container, Card, Button, Form, Fade } from \"react-bootstrap\";\r\nimport '../App.css';\r\nimport Data from \"../test_data_files/login\";\r\n\r\nfunction Login(props){\r\n    // let [check, changeCheck] = useState(false);\r\n    let [id, setId] = useState(\"\");\r\n    let [pwd, setPwd] = useState(\"\");\r\n    let [open, setOpen] = useState(false);\r\n    \r\n   \r\n    const userCheck = function(){\r\n      console.log(Data.users);\r\n      for(const user in Data.users){\r\n        if(id === Data.users[user].id && pwd === Data.users[user].pwd){\r\n          props.changeLoginInfo(Data.users[user]);\r\n          console.log(Data.users[user]);\r\n          setOpen(false);\r\n        }else{\r\n          setOpen(true);\r\n        }    \r\n      }\r\n    }\r\n    return (\r\n      <Container className=\"jnk-loginCard\">\r\n          <Row >\r\n            <Col></Col>\r\n            {/* <Col md=\"auto\"> */}\r\n            <Col lg={4} md={6} sm={10} >\r\n            <Card>\r\n              <Card.Header as=\"h5\" ><b>JNK_목표관리</b></Card.Header>\r\n              <Card.Body>\r\n              <Form>\r\n                {/* <Form.Group controlId=\"formBasicID\"> */}\r\n                   <Form.Check type=\"checkbox\" label=\"ID 저장\" className=\"text-left\"/><br/>\r\n                  <Form.Control type=\"text\" placeholder=\"ID\" label=\"ID\" onChange={(e)=>{setId(e.target.value)}}/><br/>\r\n                  <Form.Control type=\"password\" placeholder=\"비밀번호\"  label=\"password\" onChange={(e)=>{setPwd(e.target.value)}}/><br/>\r\n                  {/* <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text> */}\r\n                {/* </Form.Group> */}\r\n                <Fade in={open} className=\"text-left\">\r\n                  <p style={{color: \"#ff4700\"}}> <b>ID 또는 비밀번호가 다릅니다.</b></p>\r\n                </Fade>\r\n                <Button variant=\"success\" style={{width: \"50%\"}} onClick={()=>{userCheck()}}>로그인</Button>\r\n              </Form>                \r\n              </Card.Body>\r\n            </Card>\r\n            \r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n      </Container>   \r\n      );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Nav, OverlayTrigger, Tooltip, Container } from \"react-bootstrap\";\r\nimport '../App.css';\r\n\r\nfunction MainNav(props){\r\n  return(\r\n    <Container style={{marginTop: \"20px\", backgroundColor:\"inherit\"}}>\r\n      {\r\n        props.manager ? (\r\n          <Nav\r\n            fixed=\"top\"\r\n            fill\r\n            variant=\"tabs\"\r\n            defaultActiveKey=\"link-0\"\r\n            onSelect={props.changeTab}\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-0\">\r\n                <i class=\"fa fa-home fa-lg\" aria-hidden=\"true\">                  \r\n                  <span className=\"jnk-menu\">Home</span>\r\n                </i>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"m_link-1\">\r\n                <i class=\"fa fa-list fa-lg\" aria-hidden=\"true\">                  \r\n                  <span className=\"jnk-menu\">목표등록</span>\r\n                </i>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"m_link-2\">\r\n                <i class=\"fa fa-check-square-o fa-lg\" aria-hidden=\"true\">                 \r\n                  <span className=\"jnk-menu\">결과확인</span>\r\n                </i>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        ) : (\r\n          <Nav\r\n            fill\r\n            variant=\"tabs\"\r\n            defaultActiveKey=\"link-0\"\r\n            onSelect={props.changeTab}\r\n            style={{ fontSize: \"0.9em\" }}\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-0\">\r\n                <i class=\"fa fa-home fa-lg\" aria-hidden=\"true\">\r\n                  <span className=\"jnk-menu\">Home</span>\r\n                </i>                \r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\">\r\n                <i class=\"fa fa-list fa-lg\" aria-hidden=\"true\">\r\n                  <span className=\"jnk-menu\">참여</span>\r\n                </i> \r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-2\">\r\n                  <i class=\"fa fa-calendar-plus-o fa-lg\" aria-hidden=\"true\">\r\n                    <span className=\"jnk-menu\">계획</span>\r\n                  </i>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-3\">\r\n                <i class=\"fa fa-calendar-check-o fa-lg\" aria-hidden=\"true\">\r\n                  <span  className=\"jnk-menu\">실행</span>\r\n                </i>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-4\">\r\n                <i class=\"fa fa-user-circle-o fa-lg\" aria-hidden=\"true\"><span className=\"jnk-menu\">내정보</span></i>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainNav;","import React, {useState} from 'react';\r\nimport {Container, Card, Badge, Button, FormControl, InputGroup, Carousel, Modal} from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\n\r\nfunction Main(props){\r\n  let goalUser = \"홍길동\";\r\n  let goalName = \"자격증 따기\";\r\n\r\n  let lists = [\r\n    {\r\n      name: \"고병련\",\r\n      goalName: \"리액트 공부하기\",\r\n      date: \"2021년 12월 02일 오후 6:30\",\r\n      content: \"어쩌고 저쩌고 해서 어쩌고 저쩌고 했다\",\r\n      score: \"★★★★☆\",\r\n      image: [\"/images/test02.jpg\", \"/images/test06.jpg\"],\r\n      commentList: [\r\n        {\r\n          name: \"홍길동\",\r\n          date: \"2021년 01월 21일\",\r\n          content: \"오~ 굳뜨\"\r\n        },\r\n        {\r\n          name: \"김길순\",\r\n          date: \"2021년 01월 20일\",\r\n          content: \"오늘도 해냈군요~ 멋있다.\"\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"공경환\",\r\n      goalName: \"다이어트 도시락\",\r\n      date: \"2021년 12월 03일 오전 11:50\",\r\n      content: \"어쩌고 저쩌고 해서 어쩌고 저쩌고 했다\",\r\n      score: \"★★★☆☆\",\r\n      image: [\"/images/test01.jpg\", \"/images/test04.jpg\"],\r\n      commentList: [\r\n        {\r\n          name: \"홍길동\",\r\n          date: \"2021년 01월 21일\",\r\n          content: \"오~ 굳뜨\"\r\n        },\r\n        {\r\n          name: \"김길순\",\r\n          date: \"2021년 01월 20일\",\r\n          content: \"오늘도 해냈군요~ 멋있다.\"\r\n        },\r\n        {\r\n          name: \"제이슨\",\r\n          date: \"2021년 01월 22일\",\r\n          content: \"나도 열심히 해야지~ 화이팅\"\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"김은미\",\r\n      goalName: \"은미바\",\r\n      date: \"2021년 12월 04일 오후 7:30\",\r\n      content: \"어쩌고 저쩌고 해서 어쩌고 저쩌고 했다\",\r\n      score: \"★★★★☆\",\r\n      image: [\"/images/test03.jpg\",\"/images/test06.jpg\",\"/images/test05.jpg\"],\r\n      commentList: [\r\n        {\r\n          name: \"김길순\",\r\n          date: \"2021년 01월 20일\",\r\n          content: \"오늘도 해냈군요~ 멋있다.\"\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  \r\n  // 댓글\r\n  const [commentState, commentStateChange] = useState([]);\r\n  \r\n  // 이미지 더보기 관련 \r\n  const [imageState, setImageState] = useState(\"\");                 // 보이는 이미지\r\n  const [imageListState, setImageListState] = useState([]);         // 이미지 리스트   \r\n  const [imageIndexState, setImageIndexState] = useState(0);        // 이미지 리스트의 보여질 인덱스\r\n  const [imageGoalNameState, setImageGoalNameState] = useState(\"\"); // 타이틀 - 목표명\r\n  const [imageDateState, setImageDateState] = useState(\"\");         // 타이틀 - 날짜\r\n  const [imageNameState, setImageNameState] = useState(\"\");         // 타이틀 - 작성자 \r\n  const [showState, setShowState] = useState(false);                // 더보기 화면 보이고 안보이고\r\n\r\n\r\n  function resetCommentState(){\r\n    var newArrayComment = [... commentState];\r\n    for(const i in lists){\r\n      newArrayComment[i] = false;\r\n    }\r\n    commentStateChange(newArrayComment);\r\n  };\r\n\r\n  function setCommentState(i){\r\n    var newArray = [... commentState];\r\n    newArray[i] = !(commentState[i]);\r\n    commentStateChange(newArray);\r\n    \r\n  };\r\n\r\n  const setImageModal = (imageList, galName, name, date) => {\r\n    \r\n    console.log(imageList);\r\n    setImageListState(imageList);\r\n    setImageGoalNameState(galName);\r\n    setImageNameState(name);\r\n    setImageDateState(date);\r\n    setImageState(imageList[0]);\r\n    \r\n    setShowState(true);\r\n  }\r\n \r\n  const setImageModalVeiw =  (n) => {\r\n    console.log(n ,imageIndexState, imageIndexState + n )\r\n    if(imageIndexState + n >= 0 && imageIndexState + n < imageListState.length){      \r\n      setImageState(imageListState[imageIndexState + n]);\r\n      setImageIndexState(imageIndexState + n);\r\n    }\r\n  }\r\n  \r\n  const handleClose = () => {\r\n    setShowState(false);\r\n    setImageIndexState(0);\r\n  }\r\n\r\n  \r\n  return(\r\n    <Container className=\"text-left jnk-container\">\r\n      {props.manager ? (\r\n          <Card body style={{ fontSize: \"1.2em\", border: \"none\", margin: \"auto\" }}>\r\n            <b>{goalUser}님의 {goalName} 결과가 등록되었습니다.</b>\r\n            <span style={{ paddingLeft: \"15px\"}}>\r\n            <Button variant=\"outline-info\" size=\"sm\" ><b>결과 확인</b></Button>\r\n            </span>\r\n          </Card>\r\n        ) : (\r\n          <Card body style={{ fontSize: \"1.2em\", border: \"none\", margin: \"auto\" }}>\r\n            <b>{goalName}가 종료되었습니다.</b>\r\n            <span style={{ paddingLeft: \"15px\"}}>\r\n              <Button variant=\"outline-info\" size=\"sm\" ><b>결과 등록</b></Button>\r\n            </span>\r\n          </Card>\r\n        )}\r\n\r\n        {lists.map((list, i) => {\r\n          return (\r\n            <Card key={i} style={{margin: \"20px auto\"}}>\r\n              <Card.Header as=\"h5\"> <b>{list.goalName}</b> </Card.Header>\r\n              <Card.Body>\r\n                <Card.Title style={{fontSize: \"1em\"}}> \r\n                  <b>{list.name}</b><br/>\r\n                  <span  style={{fontSize: \"0.9em\"}}>{list.date}</span><br/>\r\n                  {list.score} \r\n                  </Card.Title>\r\n                <Card.Text>{list.content}</Card.Text>\r\n              </Card.Body>\r\n\r\n              <Card.Img src={list.image[0]}/>\r\n              <Card.Body>\r\n                <div className=\"text-right\"> \r\n                  <h5>\r\n                    {\r\n                      list.image.length - 1 > 0 ? (\r\n                        <Badge variant=\"secondary\" style={{cursor: \"pointer\"}} onClick={()=>{setImageModal(list.image, list.goalName, list.name, list.date)}}>사진 {list.image.length - 1} 개 더 보기</Badge>\r\n                      ) : null\r\n                    }\r\n                    &nbsp;<Badge variant=\"secondary\" style={{cursor: \"pointer\"}} onClick={()=>{setCommentState(i)}}>댓글 {list.commentList.length} 개</Badge>\r\n                  </h5>\r\n                  <hr/>\r\n                </div>\r\n                \r\n                {commentState[i] ? (\r\n                  list.commentList.map((comment)=>{\r\n                    return(\r\n                      <div key=\"i\" style={{backgroundColor: \"#eaebec\", borderRadius: \"10px\", padding: \"10px\", marginBottom: \"10px\"}}>\r\n                        <b>{comment.name}</b>\r\n                        <span style={{fontSize: \"0.8em\", paddingLeft: \"10px\"}}>{comment.date}</span> <br/>\r\n                        {comment.content}\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : null }\r\n                \r\n          \r\n                <InputGroup className=\"mb-3\"  style={{marginTop:\"30px\"}}>\r\n                  <FormControl\r\n                    placeholder=\"댓글을 입력하세요\"\r\n                    aria-label=\"댓글을 입력하세요\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    style={{backgroundColor: \"#eaebec\", borderRadius: \"10px 0 0 10px\", padding: \"10px\"}}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\" style={{backgroundColor: \"#eaebec\", borderRadius: \"0 10px 10px 0\", zIndex: \"3\"}}>확인</Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          );\r\n        })}\r\n\r\n        \r\n      <Modal show={showState} onHide={handleClose}>\r\n        <Modal.Header closeButton style={{paddingBottom: \"0\"}}>\r\n          <Modal.Title>\r\n          <span style={{fontSize:\"0.8em\"}}><b>{imageGoalNameState}&nbsp;</b></span> \r\n          <p style={{fontSize:\"0.6em\"}}>{imageNameState}&nbsp;{imageDateState}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n          {/* <div style={{position: \"relative\"}}> */}\r\n            <img className=\"d-block w-100\" src={imageState}></img>\r\n            {\r\n              imageIndexState != 0 ? (\r\n                <div className=\"jnk-imageMoreLeft\" onClick={()=>{setImageModalVeiw(-1)}}><i class=\"fa fa-chevron-left fa-2x\" aria-hidden=\"true\"></i></div>\r\n              ) : (\r\n              <div className=\"jnk-imageMoreLeft disabled\" onClick={()=>{setImageModalVeiw(-1)}}><i class=\"fa fa-chevron-left fa-2x\" aria-hidden=\"true\"></i></div>\r\n              )\r\n            }\r\n            {\r\n              imageIndexState + 1 <= imageListState.length - 1? (\r\n                <div className=\"jnk-imageMoreRight\" onClick={()=>{setImageModalVeiw(1)}}><i class=\"fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></i></div>\r\n              ) : (\r\n                <div className=\"jnk-imageMoreRight disabled\" onClick={()=>{setImageModalVeiw(1)}}><i class=\"fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></i></div>\r\n              )\r\n            }\r\n\r\n            \r\n            \r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport {Container, Accordion, Button, Card,Form, Col, Row, Badge } from 'react-bootstrap';\r\n\r\nfunction Participation(props){\r\n  const lists = [      \r\n    {\r\n      name: \"관리자\",\r\n      goalName: \"올 한해 자격증 취득\",\r\n      startDate: \"2021년 01월 02일\",\r\n      endDate: \"2021년 12월 31일\",      \r\n      description: \"어쩌고 저쩌고 해서 어쩌고 저쩌고 어쩌고 저쩌고 해서 어쩌고 저쩌고 어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다. \",\r\n      plan: true,\r\n      subgoal: true,    \r\n      subgoalContent: \"SQLD\", \r\n      necessary: true,        \r\n      participants : [\"고병련\",\"김은미\",\"임정대\"],\r\n      rating: \"결과\",\r\n    },\r\n    {\r\n      name: \"고병련\",\r\n      goalName: \"리액트 책 한권 보기\",\r\n      startDate: \"2020년 12월 02일\",\r\n      endDate: \"2021년 5월 31일\",      \r\n      description: \"어쩌고 어쩌고 저쩌고 해서 어쩌고 저쩌고 저쩌고 해서 어쩌고 저쩌고 합시다. \",\r\n      plan: true,\r\n      subgoal: false,      \r\n      participants : [\"고병련\"],\r\n      rating: \"실행\",\r\n    },\r\n    {\r\n      name: \"김은미\",\r\n      goalName: \"아침 6시에 일어나기\",\r\n      startDate: \"2021년 01월 02일\",\r\n      endDate: \"2021년 12월 31일\",      \r\n      description: \"어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다. 어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다.어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다.어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다. \",\r\n      plan: false,\r\n      subgoal: true,        \r\n      necessary: false,    \r\n      participants : [\"임정대\",\"신동진\"],\r\n      rating: \"실행\",\r\n    },    \r\n    {\r\n      name: \"공경환\",\r\n      goalName: \"다이어트 도시락 한끼 먹기 \",\r\n      startDate: \"2021년 01월 02일\",\r\n      endDate: \"2021년 12월 31일\",      \r\n      description: \"어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다. 어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다.어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다.어쩌고 저쩌고 해서 어쩌고 저쩌고 합시다.\",\r\n      plan: false,\r\n      subgoal: false,     \r\n      necessary: false,        \r\n      participants : [\"고병련\",\"김은미\",\"임정대\"],\r\n      rating: \"실행\",\r\n    },\r\n  ];\r\n\r\n  return(\r\n    <Container className=\"text-left jnk-container\">\r\n       <Accordion>\r\n      <Card style={{border: \"none\"}}>    \r\n        <Card.Body style={{padding: 0}}>\r\n        <Form.Control as=\"select\" defaultValue=\"전체\" className=\"d-inline\" style={{width: \"30%\"}}>\r\n          <option>전체</option>\r\n          <option>참여</option>\r\n          <option>미참여</option>\r\n        </Form.Control>\r\n        <Accordion.Toggle eventKey=\"0\"  style={{marginLeft: \"10%\", width: \"60%\", border: \"none\", backgroundColor:\"inherit\", padding: 0}}>\r\n        <Button variant=\"success\" className=\"w-100\">목표작성</Button>\r\n        </Accordion.Toggle>\r\n        </Card.Body>         \r\n        <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body style={{border: \"1px solid rgba(0,0,0,.125)\", borderRadius: \"0.25rem\"}}>Hello! I'm the body</Card.Body>\r\n          </Accordion.Collapse>         \r\n      </Card>\r\n      </Accordion>\r\n\r\n      {\r\n        lists.map((list, i)=>{\r\n          return(\r\n          <Accordion style={{marginTop:\"20px\"}}>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n              <Row style={{paddingBottom: \"0.5em\"}}>\r\n                <Col as=\"h5\"> \r\n                  {list.goalName} &nbsp;\r\n                  {\r\n                    list.necessary ? ( \r\n                      <Badge as=\"h4\" variant=\"danger\">필수</Badge>\r\n                    ) : null\r\n                  }                  \r\n                </Col>\r\n              </Row>\r\n\r\n              {\r\n                !list.necessary ? (\r\n                  <Row style={{paddingBotton: \"0.5em\"}}>\r\n                    <Col> <b>{list.name}</b></Col>\r\n                  </Row>\r\n                ) : null\r\n              }\r\n              \r\n\r\n              <Row>\r\n                <Col> <b>{list.startDate}</b> &sim; {list.endDate} </Col>\r\n              </Row>\r\n                          \r\n              <Row style={{paddingTop: \"0.5em\"}}>\r\n                <Col> {list.description} </Col>\r\n              </Row>\r\n\r\n              <Row style={{paddingTop: \"0.5em\"}}>\r\n                <Col>\r\n                  {\r\n                    list.participants.length > 0 ? (\r\n                      <p> [{list.participants.length}명] 참여 </p>\r\n                    ) : null\r\n                  }\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col as=\"h5\">                  \r\n                  <><Badge variant=\"primary\"> {list.rating} </Badge><span>&nbsp;&nbsp;</span></>\r\n                  {\r\n                    list.subgoal ? (\r\n                      <><Badge variant=\"info\">세부목표</Badge><span>&nbsp;&nbsp;</span></>\r\n                    ) : null \r\n                  }\r\n                  \r\n                  {\r\n                    list.plan ? (                  \r\n                      <><Badge variant=\"success\">계획</Badge><span>&nbsp;&nbsp;</span></>\r\n                    ) : null\r\n                  }\r\n                  {\r\n                    list.participants.indexOf(props.user) >= 0 ? (\r\n                      <Badge variant=\"secondary\">참여중</Badge>\r\n                    ) : null\r\n                  }\r\n                </Col>\r\n              </Row>\r\n\r\n            </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  {\r\n                    list.subgoal ? (\r\n                      list.subgoalContent ? (\r\n                      <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                          <Form.Label><b>세부목표</b></Form.Label>\r\n                          <Form.Control type=\"text\" placeholder={list.subgoalContent} readonly=\"true\" />\r\n                        </Form.Group>\r\n                      </Form>\r\n                      ) : (\r\n                        <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                          <Form.Label><b>세부목표</b></Form.Label>\r\n                          <Form.Control type=\"text\" placeholder=\"# + 단어로 작성 바랍니다. \" />\r\n                        </Form.Group>\r\n                      </Form>\r\n                      )\r\n                    ) : null\r\n                  }\r\n                  {\r\n                    list.participants.indexOf(props.user) >= 0 ? (\r\n                      <Button variant=\"outline-secondary\" className=\"w-100\"><b>참여취소</b></Button>\r\n                    ) : (                     \r\n                      <Button variant=\"outline-secondary\" className=\"w-100\"><b>참여</b></Button>   \r\n                      \r\n                    )\r\n                  }\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>            \r\n            </Accordion>\r\n\r\n            \r\n            );\r\n        })\r\n      }\r\n        \r\n        {/* <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n              Click me!\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>Hello! I'm another body</Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Participation;","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nfunction Plan(){\r\n  return(\r\n    <Container>\r\n      <h1> 계획 작성 페이지다  </h1>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Plan;","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nfunction Excution(){\r\n  return(\r\n    <Container>\r\n    < h1> 실행등록 페이지다~  </h1>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Excution;","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nfunction MyInfo(){\r\n  return(\r\n    <Container>\r\n    < h1> 마이페이지다~  </h1>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MyInfo;","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nfunction RegisterManager(){\r\n  return(\r\n    <Container>\r\n    < h1> 관리자 목표등록 페이지~  </h1>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegisterManager;","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nfunction ResultManager(){\r\n  return(\r\n    <Container>\r\n    < h1> 관리자 결과 확인 페이지~  </h1>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ResultManager;","import './App.css';\nimport React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './components/Login';\nimport MainNav from \"./components/MainNav\";\nimport Main from \"./components/Main\";\nimport Participation from \"./components/Participation\";\nimport Plan from \"./components/Plan\";\nimport Excution from \"./components/Excution\";\nimport MyInfo from \"./components/MyInfo\";\nimport RegisterManager from \"./components/RegisterManager\";\nimport ResultManager from \"./components/ResultManager\";\nimport { Navbar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nfunction App() {\n  \n  const [tab, changeTab] = useState(\"link-0\");\n  const [loginInfo, changeLoginInfo ] = useState({});\n  // const [loginInfo, changeLoginInfo ] = useState({\n  //   id: \"kim\",\n  //   name: \"김은미\",\n  // });\n\n  function bodyComponent(eventKey){\n    switch(eventKey){\n      case \"link-1\" :\n        return <Participation user={loginInfo.name}></Participation>;\n        break;\n      case \"link-2\" : \n        return <Plan></Plan>;\n        break;\n      case \"link-3\" :\n        return <Excution></Excution>;\n        break;\n      case \"link-4\" :\n        return <MyInfo></MyInfo>;\n        break;\n      case \"m_link-1\" : \n        return <RegisterManager></RegisterManager>;\n        break;\n      case \"m_link-2\" :\n        return <ResultManager></ResultManager>;\n        break;\n      default :\n        return <Main manager={loginInfo.id == \"manager\" ? true: false}></Main>;\n\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      \n        { loginInfo.id ? (\n          <div className=\"jnk_fixedTop\"style={{backgroundColor: \"white\", height: \"125px\"}}>\n            {/* // <div className=\"jnk_navBack\" > */}\n              <Navbar bg=\"dark\" variant=\"dark\" className=\"container\">\n                <Navbar.Brand href=\"#home\" id=\"jnk-logo\">\n                  JNK_목표관리\n                </Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                  <Navbar.Text className=\"jnk-naveText\">\n                    {loginInfo.id == \"manager\" ? `관리자님 반갑습니다.` : `${loginInfo.name}님 오늘도 목표!달성!`} &nbsp; &nbsp;\n                    <OverlayTrigger\n                      key=\"left\"\n                      placement=\"left\"\n                      overlay={\n                        <Tooltip id=\"tooltip-left\">\n                          <strong>로그아웃</strong>\n                        </Tooltip>\n                      }\n                    >\n                      <i class=\"fa fa-sign-out fa-2x\" aria-hidden=\"true\" onClick={()=>{changeLoginInfo({})}}></i>\n                    </OverlayTrigger>\n                  </Navbar.Text>\n                </Navbar.Collapse>\n              </Navbar>\n              {/* </div>  */}\n              <MainNav manager={loginInfo.id == \"manager\" ? true: false} changeTab={changeTab}></MainNav>            \n            </div>\n            ): <Login changeLoginInfo={changeLoginInfo}></Login>\n          }\n\n        <div  style={{position: \"absolute\", top: \"125px\", right: 0, left: 0, maxWidth: \"767px\", margin: \"auto\", jIndex: \"101\"}}>\n          {loginInfo.id ? bodyComponent(tab) : null}\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}